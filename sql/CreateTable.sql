CREATE TABLE [User] (
	id int NOT NULL,
	RoleId int NOT NULL,
	FirstName nvarchar(255) NOT NULL,
	SecondName nvarchar(255) NOT NULL,
	Phone int,
	SpecializationID int,
	IsDeleted bit NOT NULL,
  CONSTRAINT [PK_USER] PRIMARY KEY CLUSTERED
  (
  [id] ASC
  ) WITH (IGNORE_DUP_KEY = OFF)

)
GO
CREATE TABLE [UserRole] (
	id int NOT NULL,
	Name nvarchar(255) NOT NULL,
  CONSTRAINT [PK_USERROLE] PRIMARY KEY CLUSTERED
  (
  [id] ASC
  ) WITH (IGNORE_DUP_KEY = OFF)

)
GO
CREATE TABLE [Request] (
	id int NOT NULL,
	WorkerId int NOT NULL,
	ClientId int NOT NULL,
	ServicesId int NOT NULL,
	Date date NOT NULL,
	Address nvarchar(255) NOT NULL,
	StatusId int NOT NULL,
	Comment nvarchar,
  CONSTRAINT [PK_REQUEST] PRIMARY KEY CLUSTERED
  (
  [id] ASC
  ) WITH (IGNORE_DUP_KEY = OFF)

)
GO
CREATE TABLE [Status] (
	id int NOT NULL,
	Name nvarchar(255) NOT NULL,
	IsDeleted bit NOT NULL,
  CONSTRAINT [PK_STATUS] PRIMARY KEY CLUSTERED
  (
  [id] ASC
  ) WITH (IGNORE_DUP_KEY = OFF)

)
GO
CREATE TABLE [Specialization] (
	id int NOT NULL,
	Name nvarchar(255) NOT NULL,
	IsDeleted bit NOT NULL,
  CONSTRAINT [PK_SPECIALIZATION] PRIMARY KEY CLUSTERED
  (
  [id] ASC
  ) WITH (IGNORE_DUP_KEY = OFF)

)
GO
CREATE TABLE [Services] (
	id int NOT NULL,
	Name nvarchar(255) NOT NULL,
	SpecializationID int NOT NULL,
	IsDeleted bit NOT NULL,
  CONSTRAINT [PK_SERVICES] PRIMARY KEY CLUSTERED
  (
  [id] ASC
  ) WITH (IGNORE_DUP_KEY = OFF)

)
GO
CREATE TABLE [SortingRequest] (
	id int NOT NULL,
	Requestld int NOT NULL,
	Servicesld int NOT NULL,
	StatusId int NOT NULL,
  CONSTRAINT [PK_SORTINGREQUEST] PRIMARY KEY CLUSTERED
  (
  [id] ASC
  ) WITH (IGNORE_DUP_KEY = OFF)

)
GO
ALTER TABLE [User] WITH CHECK ADD CONSTRAINT [User_fk0] FOREIGN KEY ([RoleId]) REFERENCES [UserRole]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [User] CHECK CONSTRAINT [User_fk0]
GO
ALTER TABLE [User] WITH CHECK ADD CONSTRAINT [User_fk1] FOREIGN KEY ([SpecializationID]) REFERENCES [Specialization]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [User] CHECK CONSTRAINT [User_fk1]
GO


ALTER TABLE [Request] WITH CHECK ADD CONSTRAINT [Request_fk0] FOREIGN KEY ([WorkerId]) REFERENCES [User]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [Request] CHECK CONSTRAINT [Request_fk0]
GO
ALTER TABLE [Request] WITH CHECK ADD CONSTRAINT [Request_fk1] FOREIGN KEY ([ClientId]) REFERENCES [User]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [Request] CHECK CONSTRAINT [Request_fk1]
GO
ALTER TABLE [Request] WITH CHECK ADD CONSTRAINT [Request_fk2] FOREIGN KEY ([ServicesId]) REFERENCES [Services]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [Request] CHECK CONSTRAINT [Request_fk2]
GO
ALTER TABLE [Request] WITH CHECK ADD CONSTRAINT [Request_fk3] FOREIGN KEY ([StatusId]) REFERENCES [Status]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [Request] CHECK CONSTRAINT [Request_fk3]
GO



ALTER TABLE [Services] WITH CHECK ADD CONSTRAINT [Services_fk0] FOREIGN KEY ([SpecializationID]) REFERENCES [Specialization]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [Services] CHECK CONSTRAINT [Services_fk0]
GO

ALTER TABLE [SortingRequest] WITH CHECK ADD CONSTRAINT [SortingRequest_fk0] FOREIGN KEY ([Requestld]) REFERENCES [Request]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [SortingRequest] CHECK CONSTRAINT [SortingRequest_fk0]
GO
ALTER TABLE [SortingRequest] WITH CHECK ADD CONSTRAINT [SortingRequest_fk1] FOREIGN KEY ([Servicesld]) REFERENCES [Services]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [SortingRequest] CHECK CONSTRAINT [SortingRequest_fk1]
GO
ALTER TABLE [SortingRequest] WITH CHECK ADD CONSTRAINT [SortingRequest_fk2] FOREIGN KEY ([StatusId]) REFERENCES [Status]([id])
ON UPDATE CASCADE
GO
ALTER TABLE [SortingRequest] CHECK CONSTRAINT [SortingRequest_fk2]
GO

